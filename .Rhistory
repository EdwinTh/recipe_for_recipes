rec_with_steps <- rec %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
rec_prepped <- rec_with_steps %>%
prep()
rec_with_steps
rec_with_steps %>% prep()
rec
re
rec
rec_with_steps <- rec %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
rec_with_steps
rec_prepped <- rec_with_steps %>%
prep()
source("~/Documents/R_packages/recipes/R/selections.R")
source("~/Documents/R_packages/recipes/R/recipe.R")
source("~/Documents/R_packages/recipes/R/misc.R")
library(tidyverse)
library(rlang)
library(recipes)
train_set <- mtcars[1:20, c("am", "disp", "hp")]
test_set  <- mtcars[21:32, c("am", "disp", "hp")]
rec <- recipe(train_set, am ~ .)
rec_with_steps <- rec %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
rec_prepped <- rec_with_steps %>%
prep()
library(recipes)
train_set <- mtcars[1:20, c("am", "disp", "hp")]
test_set  <- mtcars[21:32, c("am", "disp", "hp")]
rec <- recipe(train_set, am ~ .)
rec_with_steps <- rec %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
rec_prepped <- rec_with_steps %>%
prep()
library(recipes)
train_set <- mtcars[1:20, c("am", "disp", "hp")]
test_set  <- mtcars[21:32, c("am", "disp", "hp")]
rec <- recipe(train_set, am ~ .)
rec_with_steps <- rec %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
rec_prepped <- rec_with_steps %>%
prep()
rec_prepped
print.eRum <- function(x) {
ret <- paste(x$name, "from", x$country,
"is at eRum and thinks its awesome.")
print(ret)
}
eRum_generator("Edwin", "the Netherlands")
eRum_generator <- function(name, country){
x <- list(name = name, country = country)
class(x) <- "eRum"
x
}
eRum_generator("Edwin", "the Netherlands")
eRum_generator("Riccardo", "Italy")
library(tidyverse)
read_csv("~/Desktop/fib.csv")
read_csv("~/Desktop/objecten_fib.csv")
df <- read_csv("~/Desktop/objecten_fib.csv")
df
?pull
day_count <- function(df,
first_day_col,
last_day_col) {
first_day_col <- pull(df, !!enquo(first_day_col))
print(first_day_col)
#all_vals <-
}
day_count(mtcars, cyl)
range <- min(first_day_vec):max(last_day_vec)
df
first_day_vec <- as.Date(df$first_day) %>% as.numeric()
last_day_vec <- as.Date(df$last_day) %>% as.numeric()
range <- min(first_day_vec):max(last_day_vec)
range
results_mat <- matrix(0, nrow(df), length(range))
dim(results_mat)
4800 / 365
range[500]
first_day_vec < 15000
first_day_vec <= 15000 & last_day_vec >= 15000
sum(first_day_vec <= 15000 & last_day_vec >= 15000)
range = 1:10
map_int(range,
sum(first_day_vec <= .x & last_day_vec >= .x))
range = 15000:16000
range
range
map_int(range,
~sum(first_day_vec <= .x & last_day_vec >= .x))
range <- min(first_day_vec):max(last_day_vec)
range
map_int(range,
~sum(first_day_vec <= .x & last_day_vec >= .x))
day_count <- function(df,
first_day,
last_day) {
first_day_vec <- pull(df, !!enquo(first_day_col)) %>% as.Date() %>% as.numeric()
last_day_vec  <- pull(df, !!enquo(last_day_col)) %>% as.Date() %>% as.numeric()
range <- min(first_day_vec):max(last_day_vec)
counts <- map_int(range,
~sum(first_day_vec <= .x & last_day_vec >= .x))
data_frame(day   = as.Date(range),
count = counts)
}
jos <- sum(x$cyl)
tmp <- function(x) {
jos <- sum(x$cyl)
data_frame(jos = "jos", ha = jos)
}
tmp(mtcars)
tmp <- function(x) {
data_frame(jos = "jos", ha = sum(x$cyl))
}
tmp(mtcars)
tmp <- function(x) {
data_frame(jos = "jos", ha = sum(x$mpg))
}
mtcars %>%
group_by(cyl) %>%
map_df(tmp)
tmp
mtcars %>%
group_by(cyl)
mtcars %>%
map_df(tmp)
mtcars %>%
group_by(cyl) %>%
mtcars %>%
map_df(nrow)
mtcars %>%
group_by(cyl) %>%
map_df(mtcars, nrow)
?mapply(function, ...)
?map
mtcars %>%
group_by(cyl) %>%
map_df(mtcars, lenght)
x <- data_frame(group= c('a','b'), a = as.Date(c("2018-01-01", "2018-01-02")), b = as.Date(c("2018-01-02", "2018-01-04")))
x
df <- data_frame(group= c('a','b'), a = as.Date(c("2018-01-01", "2018-01-02")), b = as.Date(c("2018-01-02", "2018-01-04")))
df %>% split(df$group)
df %>% split(df$group) %>%
map(day_count_single_group(.x), first_day =a, last_day =b)
day_count_single_group <- function(df, first_day, last_day) {
first_day_vec <- pull(df, !!enquo(first_day_col)) %>% as.Date() %>% as.numeric()
last_day_vec  <- pull(df, !!enquo(last_day_col)) %>% as.Date() %>% as.numeric()
range <- min(first_day_vec):max(last_day_vec)
counts <- map_int(range,
~sum(first_day_vec <= .x & last_day_vec >= .x))
data_frame(day   = as.Date(range),
count = counts)
}
df %>% split(df$group) %>%
map(day_count_single_group(.x), first_day =a, last_day =b)
day_count_single_group <- function(df, first_day, last_day) {
first_day_vec <- pull(df, !!enquo(first_day)) %>% as.Date() %>% as.numeric()
last_day_vec  <- pull(df, !!enquo(last_day)) %>% as.Date() %>% as.numeric()
range <- min(first_day_vec):max(last_day_vec)
counts <- map_int(range,
~sum(first_day_vec <= .x & last_day_vec >= .x))
data_frame(day   = as.Date(range),
count = counts)
}
df %>% split(df$group) %>%
map(day_count_single_group(.x), first_day =a, last_day =b)
df %>% split(df$group) %>%
map(day_count_single_group, first_day =a, last_day =b)
day_count_single_group <- function(df, first_day, last_day) {
first_day_vec <- pull(df, !!enquo(first_day)) %>% anytime::anydate() %>% as.numeric()
last_day_vec  <- pull(df, !!enquo(last_day)) %>% anytime::anydate() %>% as.numeric()
range <- min(first_day_vec):max(last_day_vec)
counts <- map_int(range,
~sum(first_day_vec <= .x & last_day_vec >= .x))
data_frame(day   = as.Date(range),
count = counts)
}
df %>% split(df$group) %>%
map(day_count_single_group, first_day =a, last_day =b)
day_count_single_group <- function(df, first_day, last_day) {
first_day_vec <- pull(df, !!enquo(first_day)) %>% anytime::anydate() %>% as.numeric()
last_day_vec  <- pull(df, !!enquo(last_day)) %>% anytime::anydate() %>% as.numeric()
range <- min(first_day_vec):max(last_day_vec)
counts <- map_int(range,
~sum(first_day_vec <= .x & last_day_vec >= .x))
data_frame(day   = anytime::anydate(range),
count = counts)
}
df %>% split(df$group) %>%
map(day_count_single_group, first_day =a, last_day =b)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, first_day, last_day)
}
day_count(x)
x
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) #%>%
# map(day_count_single_group, first_day, last_day)
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day))
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var)))
enquo(first_day)
#%>%
#  map(day_count_single_group, enquo(first_day), enquo(last_day))
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var)))
enquo(first_day) %>% class
#%>%
#  map(day_count_single_group, enquo(first_day), enquo(last_day))
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var)))
!!enquo(first_day)
#%>%
#  map(day_count_single_group, enquo(first_day), enquo(last_day))
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var)))
UQ(enquo(first_day))
#%>%
#  map(day_count_single_group, enquo(first_day), enquo(last_day))
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day))
}
day_count(x, a, b, group)
x
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day))
}
day_count_single_group <- function(df, first_day, last_day) {
first_day_vec <- select(df, !!first_day) %>% pull %>% anytime::anydate() %>% as.numeric()
last_day_vec  <- select(df, !!last_day) %>% pull %>% anytime::anydate() %>% as.numeric()
range <- min(first_day_vec):max(last_day_vec)
counts <- map_int(range,
~sum(first_day_vec <= .x & last_day_vec >= .x))
data_frame(day   = anytime::anydate(range),
count = counts)
}
day_count(x, a, b, group)
list_count <- df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day))
name
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
pmap(.x = ., .y = names(.), function(x, nm) x$group = nm)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
pmap(.x = ., .y = names(.), function(x, nm) x$group = nm)
}
day_count(x, a, b, group)
pmap
?pmap
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2(.x = ., .y = names(.), function(x, nm) x$group = nm)
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm))
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm))
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete()
}
day_count(x, a, b, group)
?complete
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete(day, group)
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete(day, group) %>%
padr::fill_by_value()
}
day_count(x, a, b, group)
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete(day, group) %>%
padr::fill_by_value() %>%
arrange(group)
}
day_count(x, a, b, group)
df
df <- read_csv("~/Desktop/objecten_fib.csv")
df
day_count(df, first_day, last_day, bronCode)
df
df %>% filter(first_day > as.Date("2015-01-01") )
df <- read_csv("~/Desktop/objecten_fib.csv")%>% filter(first_day > as.Date("2015-01-01") )
df <- read_csv("~/Desktop/objecten_fib.csv")%>% filter(first_day > as.Date("2014-12-31") )
day_count(df, first_day, last_day, bronCode)
fib_count <- day_count(df, first_day, last_day, bronCode)
fib_count
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete(day, group) %>%
padr::fill_by_value() %>%
arrange(group) %>%
rename((!!group_var) = group)
}
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete(day, group) %>%
padr::fill_by_value() %>%
arrange(group) %>%
rename((!!group_var) = group)
}
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete(day, group) %>%
padr::fill_by_value() %>%
arrange(group) %>%
rename( jos = group)
}
fib_count <- day_count(df, first_day, last_day, bronCode)
fib_count
day_count <- function(df,
first_day,
last_day,
group_var) {
df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete(day, group) %>%
padr::fill_by_value() %>%
arrange(group) %>%
rename( !!group_var = group)
}
?rename
fib_count
fib_count
fib_count %>% filter(lubridate::year(day))
fib_count %>% filter(lubridate::year(day) == 2018)
fib_count %>% filter(day == lubridate::today())
fib_count %>% filter(day == lubridate::today()) %>% colSums
fib_count %>% filter(day == lubridate::today()) %>% select(count) %>% colSums
df <- read_csv("~/Desktop/objecten_fib.csv")%>% filter(first_day > as.Date("2014-12-31") )
df
df <- read_csv("~/Desktop/objecten_fib.csv")%>% filter(first_day > as.Date("2014-12-31") )
df <- read_csv("~/Desktop/objecten_fib.csv")%>% filter(first_day > as.Date("2014-12-31") )
df
df <- read_csv("~/Desktop/Results.csv")%>% filter(first_day > as.Date("2014-12-31") )
df
df <- read_csv("~/Desktop/objecten_fib.csv")%>% filter(first_day > as.Date("2014-12-31") )
day_count <- function(df,
first_day,
last_day,
group_var) {
ret <- df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete(day, group) %>%
padr::fill_by_value() %>%
arrange(group)
colnames(ret)[2] <- rlang::
}
day_count <- function(df,
first_day,
last_day,
group_var) {
ret <- df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete(day, group) %>%
padr::fill_by_value() %>%
arrange(group)
colnames(ret)[2] <- rlang::
}
day_count <- function(df,
first_day,
last_day,
group_var) {
ret <- df %>% split(pull(df, !!enquo(group_var))) %>%
map(day_count_single_group, enquo(first_day), enquo(last_day)) %>%
map2_df(.x = ., .y = names(.), function(x, nm) x %>% mutate(group = nm)) %>%
tidyr::complete(day, group) %>%
padr::fill_by_value() %>%
arrange(group)
}
day_count_single_group <- function(df, first_day, last_day) {
first_day_vec <- select(df, !!first_day) %>% pull() %>%
anytime::anydate() %>% as.numeric()
last_day_vec  <- select(df, !!last_day)  %>% pull() %>%
anytime::anydate() %>% as.numeric()
range <- min(first_day_vec):max(last_day_vec)
counts <- map_int(range,
~sum(first_day_vec <= .x & last_day_vec >= .x))
data_frame(day   = anytime::anydate(range),
count = counts)
}
fib_count <- day_count(df, first_day, last_day, bronCode)
fib_count
fib_count %>% filter(day == lubridate::today()) %>% select(count) %>% colSums
library(odbc)
fre <- odbc::dbConnect(odbc::odbc(), Driver = "ODBC Driver 13 for SQL Server",
Server = "fre-04-023", UID = "datasciencejobs", PWD = keyring::key_get("fre-04-023"))
library(jsonlite)
tdm %>% head
fromJSON(tdm$content[1:10])
tdm$content[1]
fromJSON(tdm$content[1])
fib_count %>% filter(day == lubridate::today()) %>% select(count) %>% colSums
